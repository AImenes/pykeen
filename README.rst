POEM |build|
============
POEM (Python multi mOdal knowlEdge eMbeddings) is Python package designed to train and evaluate knowledge graph
embedding models incorporating multi-modal information (e.g., numerical, textual, and visual information).

This package is part of the `KEEN Universe <https://github.com/SmartDataAnalytics/PyKEEN>`_.

Usage
-----
This example shows how to train a model on a data set and test on another data set.

.. code-block:: python

    # Get a training data set
    from poem.datasets import NationsTrainingTriplesFactory
    training_triples_factory = NationsTrainingTriplesFactory()

    # Pick a model
    from poem.models import TransE
    model = TransE(triples_factory=training_triples_factory)

    # Pick an optimizer from Torch
    from torch.optim import Adam
    optimizer = Adam(params=model.get_grad_params())

    # Pick a training assumption (OWA or CWA)
    from poem.training import OWATrainingLoop
    training_loop = OWATrainingLoop(model=model, optimizer=optimizer)

    # Train like Cristiano Ronaldo
    training_loop.train(num_epochs=5, batch_size=256)

    # Pick an evaluator
    from poem.evaluation import RankBasedEvaluator
    evaluator = RankBasedEvaluator(model)

    # Get a testing data set
    from poem.datasets import NationsTestingTriplesFactory
    testing_triples_factory = NationsTestingTriplesFactory()

    # Evaluate
    results = evaluator.evaluate(testing_triples, batch_size=1024)
    print(results)

POEM is extensible such that:

- Each model has the same API, so anything from ``poem.models`` can be dropped in
- Each training loop has the same API, so ``poem.training.CWATrainingLoop`` can be dropped in
- Triples factories can be generated by the user with ``from poem.instance_creation_factories.TriplesFactory``


.. |build| image:: https://travis-ci.com/mali-git/POEM_develop.svg?token=2tyMYiCcZbjqYscNWXwZ&branch=master
    :target: https://travis-ci.com/mali-git/POEM_develop
