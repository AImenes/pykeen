##########################
# Setup.py Configuration #
##########################
# Configuring setup()
[metadata]
name = poem
version = attr: src.poem.version.VERSION
description = A package for training and evaluating multimodal knowledge graph embeddings
long_description = file: README.md
long_description_content_type = text/markdown

# Links
url = https://github.com/SmartDataAnalytics/POEM
download_url = https://github.com/SmartDataAnalytics/POEM/releases
project_urls =
    Bug Tracker = https://github.com/SmartDataAnalytics/POEM/issues

# Author information
author = Mehdi Ali
author_email = mehdi.ali@cs.uni-bonn.de
maintainer = Mehdi Ali
maintainer_email = mehdi.ali@cs.uni-bonn.de

# License information
license = MIT
license_file = LICENSE

# Search tags
classifiers =
    Development Status :: 4 - Beta
    Environment :: Console
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3 :: Only
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Scientific/Engineering :: Chemistry
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Scientific/Engineering :: Information Analysis
keywords =
    Knowledge Graph Embeddings
    Machine Learning
    Data Mining
    Linked Data

[options]
install_requires =
    dataclasses; python_version < "3.7"
    dataclasses-json
    numpy
    click
    click_default_group
    torch
    tqdm
    requests
    optuna
    pandas

zip_safe = false
include_package_data = True
python_requires = >=3.6

# Where is my code
packages = find:
package_dir =
    = src

[options.packages.find]
where = src

[options.extras_require]
docs =
    sphinx
    sphinx-rtd-theme
    sphinx-click
    sphinx-autodoc-typehints

[options.entry_points]
console_scripts =
    poem = poem.cli:main

######################
# Doc8 Configuration #
# (doc8.ini)         #
######################
[doc8]
max-line-length = 120

##########################
# Coverage Configuration #
# (.coveragerc)          #
##########################
[coverage:run]
branch = True
source = poem
omit =
    tests/*
    docs/*
    src/poem/cli/*
    src/poem/__main__.py

[coverage:paths]
source =
    src/poem
    .tox/*/lib/python*/site-packages/poem

[coverage:report]
show_missing = True
exclude_lines =
    def __str__
    def __repr__
